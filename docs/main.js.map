{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/components/movie/movie.component.ts","./src/app/components/movie/movie.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router:Router, private auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  goToHome(){\n    this.router.navigate(['home'])\n  }\n  logout(){\n    this.auth.logout()\n  }\n\n}\n","<div class=\"header-container\">\n    <div class=\"logo\" (click)=\"goToHome()\">Rotten Potatoes</div>\n    <div class=\"logout\" (click)=\"logout()\">Logout</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  trendingMovies:any;\n  theatreMovies:any;\n  popularMovies: any;\n  \n\n  constructor(private http:HttpClient, private router:Router) { }\n\n  ngOnInit(): void {\n    this.getTrendingMovies()\n    this.getTheatreMovies();\n    this. getPopularMovies();\n  }\n  getTrendingMovies(){\n    this.http.get('http://localhost:4200/assets/data/trending-movies.json').subscribe((movies)=>{\n    this.trendingMovies = movies;\n    console.log(this.trendingMovies)\n    })\n  }\n\n  getTheatreMovies(){\n    this.http.get('http://localhost:4200/assets/data/theatre-movies.json').subscribe((movies)=>{\n      this.theatreMovies=movies\n      console.log(this.theatreMovies)\n    })\n  }\n  getPopularMovies() {\n    this.http\n      .get('http://localhost:4200/assets/data/popular-movies.json')\n      .subscribe((movies) => {\n        this.popularMovies = movies;\n      });\n  }\n\n  goToMovie(type:string, id:string){\n    this.router.navigate(['movie', type,id])\n  }\n\n}\n","<app-header> v</app-header>\n<div class=\"home-container\">\n    <div class=\"all-movies\">\n        <div class=\"trending-movies\">\n            <div class=\"top\">\n                <h4>Trending Movies</h4>\n                <div class=\"view-all\">View All</div>\n            </div>\n            <div class=\"movie-thumbnail\">\n                <div class=\"movie\" *ngFor=\"let movie of trendingMovies\">\n                    <div class=\"cover\" (click)=\"goToMovie('trending',movie.id)\">\n                        <img [src]=\"movie.cover\" alt=\"\">\n                    </div>\n                    <div class=\"detail\">\n                        <div class=\"name\">{{movie.name}}</div>\n                        <div class=\"rating\">\n                          Rating:  {{movie.rating}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"theatre-movies\">\n            <div class=\"top\">\n                <h4>Popular in Theatres</h4>\n                <div class=\"view-all\">View All</div>\n            </div>\n            <div class=\"movie-thumbnail\">\n                <div class=\"movie\" *ngFor=\"let movie of theatreMovies\">\n                    <div class=\"cover\" (click)=\"goToMovie('theatre',movie.id)\">\n                        <img [src]=\"movie.cover\" alt=\"\">\n                    </div>\n                    <div class=\"detail\">\n                        <div class=\"name\">{{movie.name}}</div>\n                        <div class=\"rating\">\n                          Rating:  {{movie.rating}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"popular-movies\">\n        <h4>All Time Popular</h4>\n        <div class=\"movies\">\n            <div class=\"movie\" *ngFor=\"let movie of popularMovies\">\n                \n                \n                    <div class=\"name\" (click)=\"goToMovie('popular',movie.id)\">{{movie.name}}</div>\n                    <div class=\"rating\">\n                      Rating:  {{movie.rating}}\n                    </div>\n                \n            </div>\n        </div>\n            \n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  userName='';\n  password='';\n  errMsg='';\n \n\n  constructor(private auth:AuthService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    if(this.userName.trim().length===0){\n      this.errMsg = 'Username is required';\n    }else if(this.password.trim().length===0){\n      this.errMsg = 'Password is required';\n    }else{\n      this.errMsg=''\n      let res = this.auth.login(this.userName,this.password);\n      if(res===200){\n        this.router.navigate(['home'])\n      }if(res === 403){\n        this.errMsg = 'Invalid Credentials'\n      }\n    }\n\n  }\n\n}\n","<div class=\"login-container\">\n    <img class=\"film\" src=\"assets/images/film.png\" alt=\"img\">\n    <div class=\"logo\">Rotten Potatoes</div>\n    <div class=\"desc\">\n        Rotten Potatoes is the world’s most trusted recommendation resources for\n    quality entertainment. As the leading online aggregator of movie and TV show\n    reviews from critics, we provide fans with a comprehensive guide to what’s\n    Fresh – and what’s Rotten – in theaters and at home. If you’re an\n    entertainment fan looking for a recommendation, or to share an opinion,\n    you’ve come to the right place.\n    </div>\n    <div class=\"login-form\">\n        <div class=\"form-group\">\n            <label for=\"uname\">User Name</label>\n            <input type=\"text\" name=\"uname\" class=\"form-control\" [(ngModel)]=\"userName\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"pword\">Password</label>\n            <input type=\"password\" name=\"pword\" class=\"form-control\" [(ngModel)]=\"password\">\n        </div>\n        <div class=\"btn-container\">\n            <div class=\"error\">{{errMsg}}</div>\n            <button class=\"btn btn-dark\" (click)=\"login()\">Login</button>\n        </div>\n        \n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MovieComponent } from './components/movie/movie.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    MovieComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    \n     ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router:Router) { }\n  login(username:string,password:string){\n    if(username==='karthik' && password === '1234'){\n      return 200;\n    }else{\n      return 403;\n    }\n  }\n\n\n  logout(){\n    this.router.navigate(['login'])\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss']\n})\nexport class MovieComponent implements OnInit {\n  type='';\n  id=''\n  url = '';\n  movies: any;\n  movie: any;\n\n  constructor(private route:ActivatedRoute, private http:HttpClient) { }\n\n  ngOnInit(): void {\n    this.type = this.route.snapshot.params['type']\n    this.id = this.route.snapshot.params['id']\n    if (this.type === 'trending') {\n      this.url = 'http://localhost:4200/assets/data/trending-movies.json';\n    }\n    if (this.type === 'theatre') {\n      this.url = 'http://localhost:4200/assets/data/theatre-movies.json';\n    }\n    if (this.type === 'popular') {\n      this.url = 'http://localhost:4200/assets/data/popular-movies.json';\n    }\n    this.getMovie()\n  }\n\n  getMovie(){ \n    this.http.get(this.url).subscribe((movies)=>{\n      this.movies=movies\n      let index = this.movies.findIndex(\n        (movie: { id: string })=> movie.id == this.id\n      )\n      if(index > -1){\n        this.movie = this.movies[index]\n      }\n    })\n  }\n\n}\n","<app-header></app-header>\n<div class=\"movie-container\">\n    <div class=\"top\">\n        <div class=\"left\">\n            <div class=\"name\">{{movie?.name}}</div>\n            <div class=\"rating\"><span class=\"rating-value\">Rating:</span>{{movie?.rating}}</div>\n            <div class=\"cover\">\n                <img [src]=\"movie?.cover\" alt=\"\">\n            </div>\n        </div>\n        <div class=\"right\">\n            <div class=\"title\">Rate this Movie</div>\n            <div class=\"rating-form\">\n                <div class=\"form-group\">\n                    <label for=\"uname\">Name</label>\n                    <input type=\"text\" name=\"uname\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"rating\">Rating</label>\n                    <input type=\"text\" name=\"rating\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"review\">Review</label>\n                    <textarea name=\"review\"  rows=\"3\" class=\"form-control\"></textarea>\n                </div>\n                <div class=\"btn-container\">\n                    <button class=\"btn btn-dark\">Submit</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"bottom\">\n        <h4 class=\"title\">Reviews</h4>\n        <div class=\"reviews\">\n            <div class=\"review\" *ngFor=\"let review of movie?.reviews\">\n                <div class=\"review-details\">\n                    <div class=\"review-left\">\n                        <div class=\"author\">{{review.author}}</div>\n                        <div class=\"author_dt\">{{review.published_on}}</div>\n                    </div>\n                    <div class=\"review-right\">\n                        <div class=\"rating\">\n                            <span class=\"rating-value\">Rating:</span> {{review.rating}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"review-text\"></div>\n            </div>\n        </div>\n        <div class=\"reviews\" *ngIf=\"movie?.reviews?.length===0\">\n            <div class=\"no-reviews\">No reviews yet</div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { MovieComponent } from './components/movie/movie.component';\n\nconst routes: Routes = [\n  {path:'',component:LoginComponent},\n  {path:'login', component:LoginComponent},\n  {path:'home', component:HomeComponent},\n  {path:'movie/:type/:id', component:MovieComponent},\n  {path:'**',component:LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}